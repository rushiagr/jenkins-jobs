- job-template:
    name: "{name}-upstream"
    project-type: freestyle
    disabled: true
    logrotate:
      daysToKeep: 10
      numToKeep: 20
      artifactDaysToKeep: 7
      artifactNumToKeep: 15
    scm:
      - git:
          url: https://github.com/{organization}/{name}.git
          branches:
            - '{srcbranch}'

    triggers:
      - pollscm: "H/15 * * * *"

    builders:
      - shell: "rm -rf .tox; tox -e py27"
      - trigger-builds:
          - project: "{name}-jiocloud"
            predefined-parameters: |
              branch=${{GIT_BRANCH}}
              commit=${{GIT_COMMIT}}

    properties:
      - github:
          url: https://github.com/{organization}/{name}/

    publishers:
      - ircbot:
          strategy: failure-and-fixed
          matrix-notifier: only-configurations

- job-template:
    name: "{name}-jiocloud"
    project-style: freestyle
    disabled: true
    parameters:
      - string:
          name: branch
          default: unknown
          description: "The branch that triggered the upstream build (if any)"
    logrotate:
      daysToKeep: 10
      numToKeep: 20
      artifactDaysToKeep: 7
      artifactNumToKeep: 15

    scm:
      - git:
          url: git@github.com:JioCloud/{name}.git
          name: jiocloud
          branches:
            - jiocloud/devmaster
          credentials-id: 46c0cb26-2b11-443c-b556-0f7631f02410

    triggers:
      - pollscm: "H/15 * * * *"

    builders:
      - shell: |
          #!/bin/bash -x
          export PIP_INDEX_URL=http://pypi.openstack.org/openstack
          export http_proxy=http://10.135.121.138:3128
          export https_proxy=http://10.135.121.138:3128

          # Make sure we have all the relevant remotes
          if ! git remote | grep ^origin$
          then
              git remote add origin git@github.com:{organization}/{name}.git
          fi
          if ! git remote | grep ^jiocloud$
          then
              git remote add jiocloud git@github.com:JioCloud/{name}.git
          fi
          if [ "${{branch}}" = "origin/{srcbranch}" ]
          then
            if git branch | grep jiocloud_master
            then
                # the "jiocloud_master" might be left in an inconsistent state by the previous run 
                # so delete the existing jiocloud_master and do a fresh checkout
                if [ "`git rev-parse --abbrev-ref HEAD`" == "jiocloud_master" ]
                then
                    # "jiocloud_master" can't be deleted, if we're currently on it
                    # switch to master to delete the "jiocloud_master" branch
                    git checkout master
                fi
                git branch -D jiocloud_master
                # fetch the latest
                git fetch jiocloud master
            fi
            # First make sure we have a local branch to work with
            git checkout -b jiocloud_master jiocloud/master

            # Make sure we have the relevant commit
            git fetch origin $(echo "${{branch}}" | cut -f2- -d/)

            if [ -n "${{commit}}" ]
            then
                BASE=${{commit}}
            else
                BASE=FETCH_HEAD
            fi
            # Attempt rebasing it on top of upstream master
            if ! git rebase ${{BASE}}
            then
                # If this fails, clean up...
                git rebase --abort
                # and exit with an error
                exit 1
            fi

            COMMIT_TO_PUSH="HEAD"
            TAGNAME="d${{BUILD_ID}}_rebase"
          elif [ "${{branch}}" = "unknown" -a "${{GIT_COMMIT}}" != "${{GIT_PREVIOUS_COMMIT}}" ] || [ "${{branch}}" = "jiocloud/devmaster" ]
          then
            # Jenkins should have already made sure that it's checked out
            # so we don't need to do anything here.
            TAGNAME="d${{BUILD_ID}}_forced"
            COMMIT_TO_PUSH="${{GIT_COMMIT}}"
          elif [ "${{branch}}" = "unknown" ]
          then
              echo "No branch set and no changes detected. Erring on the side of caution and bailing out."
              exit 0
          else
            echo "Not sure what to do with branch ${{branch}}"
            exit 1
          fi

          rm -rf .tox
          # Run the tests.
          if tox -e py27
          then
              # If that works out, tag it and push to github
              git tag "${{TAGNAME}}"
              git push jiocloud +${{COMMIT_TO_PUSH}}:master "${{TAGNAME}}"
          else
              exit 1
          fi
      - trigger-builds:
          - project: "{name}-pkg"

    properties:
      - github:
          url: https://github.com/JioCloud/{name}/

    publishers:
      - ircbot:
          strategy: failure-and-fixed
          matrix-notifier: only-configurations

    wrappers:
      - ssh-agent:
          credentials-id: 46c0cb26-2b11-443c-b556-0f7631f02410

- job-template:
    name: "{name}-upstream-rebase-fix-testing"
    project-type: freestyle
    disabled: true
    logrotate:
      daysToKeep: 10
      numToKeep: 20
      artifactDaysToKeep: 7
      artifactNumToKeep: 15
    scm:
      - git:
          url: https://github.com/{organization}/{name}.git
          branches:
            - '{srcbranch}'

    triggers:
      - pollscm: "H/15 * * * *"

    builders:
      - shell: "rm -rf .tox; tox -e py27"
      - trigger-builds:
          - project: "{name}-jiocloud-rebase-fix-testing"
            predefined-parameters: |
              branch=${{GIT_BRANCH}}
              commit=${{GIT_COMMIT}}

    properties:
      - github:
          url: https://github.com/{organization}/{name}/

    publishers:
      - ircbot:
          strategy: failure-and-fixed
          matrix-notifier: only-configurations

- job-template:
    name: "{name}-jiocloud-rebase-fix-testing"
    project-style: freestyle
    disabled: true
    parameters:
      - string:
          name: branch
          default: unknown
          description: "The branch that triggered the upstream build (if any)"
    logrotate:
      daysToKeep: 10
      numToKeep: 20
      artifactDaysToKeep: 7
      artifactNumToKeep: 15

    scm:
      - git:
          url: git@github.com:JioCloud/{name}.git
          name: jiocloud
          branches:
            - jiocloud/devmaster
          credentials-id: 46c0cb26-2b11-443c-b556-0f7631f02410

    triggers:
      - pollscm: "H/15 * * * *"

    builders:
      - shell: |
          #!/bin/bash -x
          # Make sure we have all the relevant remotes
          if ! git remote | grep ^origin$
          then
              git remote add origin git@github.com:{organization}/{name}.git
          fi
          if ! git remote | grep ^jiocloud$
          then
              git remote add jiocloud git@github.com:JioCloud/{name}.git
          fi
          if [ "${{branch}}" = "origin/{srcbranch}" ]
          then
            if git branch | grep jiocloud_master
            then
                # a rebase would have rewritten the branch history
                # so delete the existing jiocloud_master and do a fresh checkout
                if [ "`git rev-parse --abbrev-ref HEAD`" == "jiocloud_master" ]
                then
                    # current branch can't be deleted
                    # switch to master to delete the current branch
                    git checkout master
                fi
                git branch -D jiocloud_master
            fi
            # fetch the latest
            git fetch jiocloud master
            # First make sure we have a local branch to work with
            git checkout -b jiocloud_master FETCH_HEAD

            # Make sure we have the relevant commit
            git fetch origin $(echo "${{branch}}" | cut -f2- -d/)

            if [ -n "${{commit}}" ]
            then
                BASE=${{commit}}
            else
                BASE=FETCH_HEAD
            fi
            # Attempt rebasing it on top of upstream master
            if ! git rebase ${{BASE}}
            then
                # If this fails, clean up...
                git rebase --abort
                # and exit with an error
                exit 1
            fi

            COMMIT_TO_PUSH="HEAD"
            TAGNAME="d${{BUILD_ID}}_rebase"
          elif [ "${{branch}}" = "unknown" -a "${{GIT_COMMIT}}" != "${{GIT_PREVIOUS_COMMIT}}" ] || [ "${{branch}}" = "jiocloud/devmaster" ]
          then
            # Jenkins should have already made sure that it's checked out
            # so we don't need to do anything here.
            TAGNAME="d${{BUILD_ID}}_forced"
            COMMIT_TO_PUSH="${{GIT_COMMIT}}"
          elif [ "${{branch}}" = "unknown" ]
          then
              echo "No branch set and no changes detected. Erring on the side of caution and bailing out."
              exit 0
          else
            echo "Not sure what to do with branch ${{branch}}"
            exit 1
          fi

          # If that works out, tag it and push to github
          git tag "${{TAGNAME}}"
          git push jiocloud +${{COMMIT_TO_PUSH}}:master "${{TAGNAME}}"

          rm -rf .tox
          # Run the tests.
          if ! tox -e py27
          then
              exit 1
          fi
      - trigger-builds:
          - project: "{name}-pkg"

    properties:
      - github:
          url: https://github.com/JioCloud/{name}/

    publishers:
      - ircbot:
          strategy: failure-and-fixed
          matrix-notifier: only-configurations

    wrappers:
      - ssh-agent:
          credentials-id: 46c0cb26-2b11-443c-b556-0f7631f02410

- job-group:
    name: upstream-project-nostable
    srcbranch: master
    jobs:
      - "{name}-upstream"
      - "{name}-jiocloud"

- job-group:
    name: upstream-project-nostable-rebase-fix-testing
    srcbranch: master
    jobs:
      - "{name}-upstream-rebase-fix-testing"
      - "{name}-jiocloud-rebase-fix-testing"

- job-group:
    name: upstream-project
    srcbranch: stable/havana
    jobs:
      - "{name}-upstream"
      - "{name}-jiocloud"

- project:
    name: nova
    organization: openstack
    codebranch: jiocloud/master
    jobs:
      - upstream-project
      - '{name}-pkg'

- project:
    name: python-novaclient
    organization: openstack
    codebranch: jiocloud/master
    jobs:
      - upstream-project-nostable
      - '{name}-pkg'

- project:
    name: glance
    organization: openstack
    codebranch: jiocloud/master
    jobs:
      - upstream-project
      - '{name}-pkg'

- project:
    name: python-glanceclient
    organization: openstack
    codebranch: jiocloud/master
    jobs:
      - upstream-project-nostable
      - '{name}-pkg'

- project:
    name: heat
    organization: openstack
    codebranch: jiocloud/master
    jobs:
      - upstream-project
      - '{name}-pkg'

- project:
    name: ceilometer
    organization: openstack
    codebranch: jiocloud/master
    jobs:
      - upstream-project
      - '{name}-pkg'

- project:
    name: horizon
    organization: openstack
    pkgbranch: jiocloud/master
    codebranch: jiocloud/master
    jobs:
      - upstream-project-nostable-rebase-fix-testing
      - '{name}-pkg'

- project:
    name: reg-service
    codebranch: jiocloud/master
    pkgbranch: jiocloud/master
    jobs:
      - '{name}-pkg'

- project:
    name: python-swiftclient
    organization: openstack
    codebranch: jiocloud/master
    jobs:
      - upstream-project-nostable
      - '{name}-pkg'

- project:
    name: keystone
    organization: openstack
    codebranch: jiocloud/master
    jobs:
      - upstream-project
      - '{name}-pkg'

- project:
    name: python-keystoneclient
    organization: openstack
    codebranch: jiocloud/master
    jobs:
      - upstream-project-nostable
      - '{name}-pkg'

- project:
    name: neutron
    organization: openstack
    codebranch: jiocloud/master
    jobs:
      - upstream-project
      - '{name}-pkg'

- project:
    name: python-neutronclient
    organization: openstack
    codebranch: jiocloud/master
    jobs:
      - upstream-project-nostable
      - '{name}-pkg'

- project:
    name: cinder
    organization: openstack
    codebranch: jiocloud/master
    jobs:
      - upstream-project
      - '{name}-pkg'

- project:
    name: python-cinderclient
    organization: openstack
    codebranch: jiocloud/master
    jobs:
      - upstream-project-nostable
      - '{name}-pkg'

- project:
    name: oslo-incubator
    organization: openstack
    jobs:
      - upstream-project

- project:
    name: basicdb
    organization: sorenh
    jobs:
      - upstream-project-nostable

- job:
    name: contrail
    scm:
      - repo:
          manifest-url: https://github.com/JioCloud/contrail-vnc
          manifest-file: noauth.xml
          manifest-branch: R1.06

    triggers:
      - pollscm: "H/15 * * * *"

    properties:
      - copyartifact:
          projects: process-pkg

    builders:
      - shell: |
          #!/bin/bash -xe
          cd third_party
          python fetch_packages.py
          cd ..
          sed -i -e 's/buildpackage -S/& -uc -us/g' packages.make
          rm -rf build/packages/*
          make -f packages.make source-package-contrail source-package-neutron-plugin-contrail
          cd build/packages
          for x in *.dsc; do sbuild -n -d precise -A ${x} || true; done

    publishers:
      - archive:
          artifacts: 'build/packages/*.dsc,build/packages/*.diff.gz,build/packages/*.tar.gz,build/packages/*.changes,build/packages/*.deb'
          allow-empty: 'true'
      - trigger-parameterized-builds:
          - project: "process-pkg"
            condition: UNSTABLE_OR_BETTER
            predefined-parameters: |
              triggering_job=${JOB_NAME}
              triggering_build_number=${BUILD_NUMBER}


- job:
    name: process-pkg
    parameters:
      - string:
          name: triggering_job
          default: unknown
          description: "The job that triggered us"
      - string:
          name: triggering_build_number
          default: unknown
          description: "The build number that triggered us"
    builders:
      - shell: |
          #!/bin/bash -xe
          rm -rf incoming || true

      - copyartifact:
          project: ${triggering_job}
          filter: "**"
          target: incoming
          which-build: specific-build
          build-number: ${triggering_build_number}
          optional: true
          flatten: true

      - shell: |
          #!/bin/bash -xe
          find
          cd incoming
          for x in *.changes
          do
            python -c "from debian_bundle.deb822 import Changes; print '\n'.join([x['name'] for x in Changes(open('"${x}"', 'r').read())['Files']])" | grep \.ddeb$ | while read ddeb; do changestool ${x} dumbremove ${ddeb} ; done
            GNUPGHOME=$HOME/aptrepo/gpg reprepro -b $HOME/aptrepo include precise ${x} || true
          done


- job-template:
    name: "{name}-pkg"
    project-style: freestyle
    disabled: true
    logrotate:
      daysToKeep: 10
      numToKeep: 20
      artifactDaysToKeep: 7
      artifactNumToKeep: 15
    scm:
      - git:
          url: git@github.com:JioCloud/{name}.git
          name: jiocloud
          refspec: '+refs/heads/*:refs/remotes/jiocloud/*'
          branches:
            - "{codebranch}"
            - jiocloud/packaging
          basedir: build
          credentials-id: 46c0cb26-2b11-443c-b556-0f7631f02410

    triggers:
      - pollscm: "H/15 * * * *"

    builders:
      - shell: |
          #!/bin/bash -xe
          rm -f ./* || true

          cd build

          # This is ridiculous
          git checkout -b tmp
          git fetch jiocloud
          git branch -D master || true
          git branch -D packaging || true
          git branch -t master {codebranch}
          git branch -t packaging jiocloud/packaging

          # We could have been triggered either by a change on the pkg
          # branch or master. First, we need master.
          git checkout master

          git branch -D tmp

          # This gives us something like 2014.1.2.dev3.f72b5de
          upstream_version=$(python setup.py --version)
          upstream_name=$(python setup.py --name)

          destfile=../${{upstream_name}}_${{upstream_version}}.orig.tar.gz
          url=http://jiocloud.rustedhalo.com/ubuntu/pool/main/${{upstream_name:0:1}}/${{upstream_name}}/${{upstream_name}}_${{upstream_version}}.orig.tar.gz

          if ! wget -O "${{destfile}}" $url
          then
              # Didn't exist, we have to build it
              python  setup.py sdist
              mv dist/*.tar.gz ${{destfile}}
          fi

          # Clean up
          git clean -dfx

          # Now grab packaging
          git checkout packaging

          # and rebase it on the code branch
          git rebase {codebranch} || git rebase --abort

          # Keep the current epoch
          current_epoch=$(dpkg-parsechangelog  | grep ^Version: | cut -f2 -d' ' | grep -o ^.*: || true)

          # Someone needs to tak the blame
          export DEBEMAIL=Soren.Hansen@ril.com
          export DEBFULLNAME="JioCloud Jenkins"

          # Create a changelog entry
          dch -D precise -v ${{current_epoch}}${{upstream_version}}-jiocloud1 'Automatic build'

          # and build the source package
          dpkg-buildpackage -S -nc --source-option=--auto-commit
          cd ..
          DEB_BUILD_OPTIONS=nocheck sbuild -n -d precise -A *.dsc
          git push jiocloud +packaging || true

    properties:
      - copyartifact:
          projects: process-pkg
      - github:
          url: https://github.com/JioCloud/{name}/

    publishers:
      - ircbot:
          strategy: failure-and-fixed
          matrix-notifier: only-configurations
      - archive:
          artifacts: '*.dsc,*.diff.gz,*.tar.gz,*.changes,*.deb'
          allow-empty: 'true'
      - trigger-parameterized-builds:
          - project: "process-pkg"
            condition: UNSTABLE_OR_BETTER
            predefined-parameters: |
              triggering_job=${{JOB_NAME}}
              triggering_build_number=${{BUILD_NUMBER}}

    wrappers:
      - ssh-agent:
          credentials-id: 46c0cb26-2b11-443c-b556-0f7631f02410

- job:
    name: jio-site
    project-type: freestyle
    defaults: global
    disabled: false
    logrotate:
      daysToKeep: 10
      numToKeep: 20
      artifactDaysToKeep: 7
      artifactNumToKeep: 15
    scm:
      - git:
          url: https://github.com/jiocloud/jio-site.git
          branches:
            - 'master'
    triggers:
      - pollscm: "H/15 * * * *"
    builders:
      - shell: |
          mkdir -p debian/DEBIAN
          mkdir -p debian/etc/jio-site/
          mkdir -p debian/etc/apache2/conf.d/
          cp control postinst debian/DEBIAN
          cp jio-site.conf debian/etc/apache2/conf.d/
          cp ./*.php ./*.html ./*.css debian/etc/jio-site
          cp -R js/ css/ functions/ images/ screens/ debian/etc/jio-site
          fakeroot chown -R root:root debian
          #fakeroot chown -R nobody:nobody debian/etc/jio-site
          fakeroot dpkg-deb --build debian .
    publishers:
      - archive:
          artifacts: 'jio-site*.deb'
          allow-empty: 'true'
